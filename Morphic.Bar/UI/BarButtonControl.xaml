<ui:BarItemControl x:Class="Morphic.Bar.UI.BarButtonControl"
                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                         xmlns:ui="clr-namespace:Morphic.Bar.UI"
                         mc:Ignorable="d" d:DesignWidth="100" d:DesignHeight="70"
                         MinHeight="48"
                         d:DataContext="{d:DesignInstance ui:BarButtonControl, IsDesignTimeCreatable=True}"
                         >
    <ui:BarItemControl.Resources>
        <!-- Colours based on the active theme -->
        <SolidColorBrush x:Key="Background" Color="{Binding ActiveTheme.Background, FallbackValue=Yellow}"/>
        <SolidColorBrush x:Key="Foreground" Color="{Binding ActiveTheme.TextColor, FallbackValue=Black}"/>
        <SolidColorBrush x:Key="BorderColor" Color="{Binding ActiveTheme.BorderColor, FallbackValue=Transparent}"/>
        <SolidColorBrush x:Key="BorderOuterColor" Color="{Binding ActiveTheme.BorderOuterColor, FallbackValue=Transparent}"/>
        <!-- Convert a boolean to a visibility -->
        <ui:Ternary x:Key="BoolVisibility" False="Collapse" True="Visible" />

        <!-- Make the button style-less -->
        <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Shared button elements -->

        <!-- Item text -->
        <TextBlock x:Key="Button.Text"
                   Visibility="{Binding BarItem.ShowIcon, Converter={StaticResource BoolVisibility}}"
                   Text="{Binding BarItem.Text}"
                   TextWrapping="Wrap"
                   FontWeight="Bold"
                   Foreground="{DynamicResource Foreground}"
                   HorizontalAlignment="Center"
                   Margin="5 5 5 8"
                   TextAlignment="Center"
                   />
        <!-- Border -->
        <Border x:Key="Button.Border"
            SnapsToDevicePixels="True"
            BorderBrush="{DynamicResource BorderOuterColor}"
            BorderThickness="{Binding ActiveTheme.BorderOuterSize, FallbackValue=0}"
            >
            <Border
                SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource BorderColor}"
                BorderThickness="{Binding ActiveTheme.BorderSize, FallbackValue=0}"
                />
        </Border>

        <!-- The background colour -->
        <Border x:Key="Button.Background"
            Visibility="Visible"
            Grid.Row="1" Grid.RowSpan="2"
            CornerRadius="15"
            Padding="0"
            Background="{StaticResource Background}" />

        <!-- The image -->
        <Image x:Key="Button.Image"
            Source="{Binding BarItem.ImageSource}"
            Stretch="Uniform"
        />


        <!-- Buttons -->

        <!-- ReSharper disable once Xaml.RedundantResource - used via ButtonResource binding
        Small button, no picture -->
        <Grid x:Key="TextOnlyButton">
            <ContentControl Content="{StaticResource Button.Background}" />
            <ContentControl Content="{StaticResource Button.Text}"
                            VerticalAlignment="Center"/>
            <ContentControl Content="{StaticResource Button.Border}" />
        </Grid>

        <!-- ReSharper disable once Xaml.RedundantResource - used via ButtonResource binding
        Small button, with picture -->
        <Grid x:Key="SmallButton">

            <ContentControl Content="{StaticResource Button.Background}"
            />

            <ContentControl Content="{StaticResource Button.Image}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Width="24" Height="24"
            />
            <ContentControl Content="{StaticResource Button.Text}"
                            Margin="24 0 12 0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
            />

            <ContentControl Content="{StaticResource Button.Border}"
            />
        </Grid>

        <!-- ReSharper disable once Xaml.RedundantResource - used via ButtonResource binding
        Medium sized button, picture in box -->
        <Grid x:Key="MediumButton">
            <Grid.RowDefinitions>
                <!-- Contains the the icon -->
                <RowDefinition Height="*" />
                <!-- Contains the text -->
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <ContentControl Content="{StaticResource Button.Background}"
                            Grid.Row="0" Grid.RowSpan="2"
            />

            <ContentControl Content="{StaticResource Button.Image}"
                            Grid.Row="0"
                            Width="24" Height="24"
                            Margin="0 2 0 0"
            />

            <ContentControl Content="{StaticResource Button.Text}"
                            Grid.Row="1"
                            VerticalAlignment="Top"
            />

            <ContentControl Content="{StaticResource Button.Border}"
                            Grid.Row="0" Grid.RowSpan="2"
            />

        </Grid>

        <!-- ReSharper disable once Xaml.RedundantResource - used via ButtonResource binding
        A large button with picture -->
        <Grid x:Key="LargeButton">
            <Grid.RowDefinitions>
                <!-- Contains the top half of the icon -->
                <RowDefinition Height="*" />
                <!-- Contains the bottom half of the icon, and top half of the background -->
                <RowDefinition Height="*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>

            <ContentControl Content="{StaticResource Button.Background}"
                            Grid.Row="1" Grid.RowSpan="2"
            />

            <ContentControl Content="{StaticResource Button.Image}"
                            Grid.Row="0" Grid.RowSpan="2"
                            Width="32" Height="32"
            />

            <ContentControl Content="{StaticResource Button.Text}"
                            Grid.Row="2"
                            VerticalAlignment="Top"
            />

            <ContentControl Content="{StaticResource Button.Border}"
                            Grid.Row="0" Grid.RowSpan="3"
            />
        </Grid>

    </ui:BarItemControl.Resources>
    
    <Button x:Name="Button"
            Click="Button_OnClick"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
            >
        <ContentControl Content="{Binding ButtonResource}"></ContentControl>
    </Button>
</ui:BarItemControl>
